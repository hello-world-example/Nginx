---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by kail.
--- DateTime: 2020/8/12 15:07
---

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---
--- ngx.var.host 排除
--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---

local ignore_hosts = "," ..
        ""

if ignore_hosts == nil or not (nil == ngx.re.match(ignore_hosts, "," .. ngx.var.host .. ",")) then
    return
end

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---
--- ngx.var.uri 排除
--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---

local ignore_uri = {
    kail_cn = "," ..
            "",
}

local host_key = ngx.re.gsub(ngx.var.host, "\.", "_")
local host_uri_pattern = ignore_uri[host_key]
if not (nil == host_uri_pattern) and ngx.re.match(ngx.var.uri, host_uri_pattern) then
    return
end

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---
--- ngx.resp.get_headers()["content-type"] 排除
--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---
local ignore_content_type = "(" ..
        " text/css|" ..
        " application/javascript|" ..
        " image/.+|" ..
        " audio/.+|" ..
        " video/.+|" ..
        " noting)"

local content_type = ngx.resp.get_headers()["content-type"]
if not (content_type == nil) and ngx.re.match(" " .. content_type, ignore_content_type) then
    return
end

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---
--- 正则 过滤
--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ------ --- --- --- --- --- --- ---

-- ✔️✔️✔️✔️✔️ 手机号 （中间 11 位数字，两端非数字）
local phone = "(\\D1[3-9]\\d{9}\\D)"

-- ✔️✔️✔️✔️✔️ VIN （ data-id="xxx ）（ 大写字母加数字，两端 非字母、数字、空白、/、- ）
local vin = "([^=][^A-Za-z\\d/\\-—][A-Z\\d]{17}[^A-Za-z\\d/\\-])"

-- ✔️✔️✔️✔️✔️ 车牌号 （ data-id="xxx ）( 大写字母加数字，两端 非字母、数字、空白、/、-、款 )
local license = "([^=\\w][^A-Za-z\\d/\\-座][A-Z][A-Z\\d]{5,6}[^A-Za-z\\d/\\-款])"

-- 同时拼配 手机号、VIN、车牌号
local pattern = ".{0,20}(" .. phone .. "|" .. vin .. "|" .. license .. ").{0,20}"


-- 字符串排除
local ignore_keys = "("
        .. ")"

-- local pattern = ".*"

ngx.ctx.buffered = (ngx.ctx.buffered or "") .. ngx.arg[1];

if ngx.arg[2] then
    local inlineResponse = ngx.re.gsub(ngx.ctx.buffered, "\n", "\\n")
    -- 删除关键字
    local marchString = ngx.re.gsub(inlineResponse, ignore_keys, "")
    -- 删除关键字后仍然能匹配到
    local sensitive = ngx.re.match(marchString, pattern)
    if sensitive then
        local file = io.open("/tmp/" .. ngx.var.host .. "_" .. os.date("%Y-%m-%d_%H") .. ".log", "a+");
        local content = ""
                .. "<timeLocal:" .. ngx.var.time_local .. "> " -- 时间
                .. "<requestMethod:" .. ngx.var.request_method .. "> " -- 请求方式
                .. "<host:" .. ngx.var.host .. "> " -- 域名
                .. "<uri:" .. ngx.var.uri .. "> " -- uri 不带参数
                .. "<requestUri:" .. ngx.var.request_uri .. "> " -- request_uri 带参数
                .. "<sensitive:" .. sensitive[0] .. "> " -- 匹配到的铭感信息
                .. "<contentType:" .. content_type .. "> " -- 响应类型
                .. "<pattern:" .. pattern .. "> " -- 匹配模式
                --.. "<inlineResponse:" .. inlineResponse .. ">" -- 响应信息（不输出）
                .. "\n"
        file:write(content);
        file:close();

        -- ngx.arg[1] = "\n\n\n 疑似敏感信息，页面被禁用 " .. parrern

    end
end